{
	"ProductDocs": {
		"pendingPayment": {
			"name": "Pending Payment",
			"demo_desc": "Demo of Pending Payment",
			"description": "事前にユーザーの認可を取得することで、対象のユーザーに対して支払いを要求するプッシュ通知を送信することができます。ユーザーの操作から一定期間が経過していても支払いを促すことができるため、料金の回収を簡単に行うことが可能です。※法人のお客様のみご利用いただけます。",
			"pendingPayment_desc_1": "一定期間経過後にユーザーに支払いリクエストを送る可能性がある",
			"pendingPayment_desc_2": "ユーザーへの支払いの督促を簡潔に行いたい",
			"when_to_use": "支払リクエストを使用する場合",
			"integrating_title": "Integrating Pending Payment",
			"createPayment_title": "Create a Pending Payment",
			"createPayment_desc": "In order to create a pending payment, you will need to send a request to us with the following parameters:",
			"createPayment_desc_1": "Did you get SUCCESS in the print statement above, if yes then the API execution has happened correctly.",
			"get_payment_details": {
				"desc_1": "Now that you have created a pending payment, the next step is to implement polling to get Payment Details. We recommend a 4-5 second interval between requests. Following are the important parameters that you can provide for this method:",
				"desc_2": "Did you get SUCCESS in the print statement above, if yes then the API execution has happened correctly. On successful creation of pending payment, the status will be CREATED. If the pending order is cancelled, the status will be CANCELED. Once the user completes the payment, the status will be COMPLETED."
			},
			"cancel_a_payment": {
				"title": "Cancel a payment",
				"desc_1": "This is used when you want to delete the pending order",
				"desc_2": "処理を実施する場合には、以下のパラメーターを使用してリクエストしてください。",
				"table": {
					"desc_1": "加盟店から提供された一意の支払い取引ID"
				},
				"desc_3": "SUCCESS が返却された場合APIは正しく実行されています。",
				"desc_4_1": "レスポンス項目について詳細に知りたい 場合には、",
				"desc_4_2": " [APIドキュメントガイド]",
				"desc_4_3": "をご確認ください。"
			}
		}
	}
}
